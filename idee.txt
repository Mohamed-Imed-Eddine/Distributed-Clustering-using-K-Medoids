class k-medoids{}
construct(x,k)
attr:  x ,k,m,n
methods : 
init_medoids()
asign_to_cluster()
cost()
distance()





    // % Initialize centroids
    // centroids = kMeansInitCentroids(X, K);
    // for iter = 1:iterations
    //     % Cluster assignment step: Assign each data point to the
    //     % closest centroid. idx(i) corresponds to c^(i), the index
    //     % of the centroid assigned to example i
    //     idx = findClosestCentroids(X, centroids);
    
    //     % Move centroid step: Compute means based on centroid
    //     % assignments
    //     centroids = computeMeans(X, idx, K);
    // end
    // public k_medoids(int[][] data,int k){}




client :                    	server : 
stub.getdata		    	divise the data
kmedoid			    	if(m=nb_client) then work done
stub.return_resutl(update m)    combine result


